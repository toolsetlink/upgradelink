// Code generated by goctl. DO NOT EDIT.
package types

// The basic response with data | 基础带数据信息
// swagger:model BaseDataInfo
type BaseDataInfo struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response with data | 基础带数据信息
// swagger:model BaseListInfo
type BaseListInfo struct {
	// The total number of data | 数据总数
	Total uint64 `json:"total"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response without data | 基础不带数据信息
// swagger:model BaseMsgResp
type BaseMsgResp struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
}

// The page request parameters | 列表请求参数
// swagger:model PageInfo
type PageInfo struct {
	// Page number | 第几页
	// required : true
	// min : 0
	Page uint64 `json:"page" validate:"required,number,gt=0"`
	// Page size | 单页数据行数
	// required : true
	// max : 100000
	PageSize uint64 `json:"pageSize" validate:"required,number,lt=100000"`
}

// Basic ID request | 基础ID参数请求
// swagger:model IDReq
type IDReq struct {
	// ID
	// Required: true
	Id int `json:"id" validate:"number"`
}

// Basic IDs request | 基础ID数组参数请求
// swagger:model IDsReq
type IDsReq struct {
	// IDs
	// Required: true
	Ids []int `json:"ids"`
}

// Basic ID request | 基础ID地址参数请求
// swagger:model IDPathReq
type IDPathReq struct {
	// ID
	// Required: true
	Id int `path:"id"`
}

// Basic ID request (int32) | 基础ID参数请求 (int32)
// swagger:model IDInt32Req
type IDInt32Req struct {
	// ID
	// Required: true
	Id int32 `json:"id" validate:"number"`
}

// Basic IDs request (int32) | 基础ID数组参数请求 (int32)
// swagger:model IDsInt32Req
type IDsInt32Req struct {
	// IDs
	// Required: true
	Ids []int32 `json:"ids"`
}

// Basic ID request (int32) | 基础ID地址参数请求 (int32)
// swagger:model IDInt32PathReq
type IDInt32PathReq struct {
	// ID
	// Required: true
	Id int32 `path:"id"`
}

// Basic ID request (uint32) | 基础ID参数请求 (uint32)
// swagger:model IDUint32Req
type IDUint32Req struct {
	// ID
	// Required: true
	Id uint32 `json:"id" validate:"number"`
}

// Basic IDs request (uint32) | 基础ID数组参数请求 (uint32)
// swagger:model IDsUint32Req
type IDsUint32Req struct {
	// IDs
	// Required: true
	Ids []uint32 `json:"ids"`
}

// Basic ID request (uint32) | 基础ID地址参数请求 (uint32)
// swagger:model IDUint32PathReq
type IDUint32PathReq struct {
	// ID
	// Required: true
	Id uint32 `path:"id"`
}

// Basic ID request (int64) | 基础ID参数请求 (int64)
// swagger:model IDInt64Req
type IDInt64Req struct {
	// ID
	// Required: true
	Id int64 `json:"id" validate:"number"`
}

// Basic IDs request (int64) | 基础ID数组参数请求 (int64)
// swagger:model IDsInt64Req
type IDsInt64Req struct {
	// IDs
	// Required: true
	Ids []int64 `json:"ids"`
}

// Basic ID request (int64) | 基础ID地址参数请求 (int64)
// swagger:model IDInt64PathReq
type IDInt64PathReq struct {
	// ID
	// Required: true
	Id int64 `path:"id"`
}

// Basic ID request (string) | 基础ID参数请求 (string)
// swagger:model IDStringReq
type IDStringReq struct {
	// ID
	// Required: true
	Id string `json:"id"`
}

// Basic IDs request (string) | 基础ID数组参数请求 (string)
// swagger:model IDsStringReq
type IDsStringReq struct {
	// IDs
	// Required: true
	Ids []string `json:"ids"`
}

// Basic ID request (string) | 基础ID地址参数请求 (string)
// swagger:model IDStringPathReq
type IDStringPathReq struct {
	// ID
	// Required: true
	Id string `path:"id"`
}

// Basic UUID request in path | 基础UUID地址参数请求
// swagger:model UUIDPathReq
type UUIDPathReq struct {
	// ID
	// Required: true
	Id string `path:"id"`
}

// Basic UUID request | 基础UUID参数请求
// swagger:model UUIDReq
type UUIDReq struct {
	// ID
	// required : true
	// max length : 36
	// min length : 36
	Id string `json:"id" validate:"required,len=36"`
}

// Basic UUID array request | 基础UUID数组参数请求
// swagger:model UUIDsReq
type UUIDsReq struct {
	// Ids
	// Required: true
	Ids []string `json:"ids"`
}

// The base ID response data | 基础ID信息
// swagger:model BaseIDInfo
type BaseIDInfo struct {
	// ID
	Id *uint64 `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The base ID response data (int64) | 基础ID信息 (int64)
// swagger:model BaseIDInt64Info
type BaseIDInt64Info struct {
	// ID
	Id *int64 `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The base ID response data (int32) | 基础ID信息 (int32)
// swagger:model BaseIDInt32Info
type BaseIDInt32Info struct {
	// ID
	Id *int32 `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The base ID response data (uint32) | 基础ID信息 (uint32)
// swagger:model BaseIDUint32Info
type BaseIDUint32Info struct {
	// ID
	Id *uint32 `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The base UUID response data | 基础UUID信息
// swagger:model BaseUUIDInfo
type BaseUUIDInfo struct {
	// ID
	Id *string `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The base ID response data (string) | 基础ID信息 (string)
// swagger:model BaseIDStringInfo
type BaseIDStringInfo struct {
	// ID
	Id *string `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The data of upgrade url information | UpgradeUrl信息
// swagger:model UpgradeUrlInfo
type UpgradeUrlInfo struct {
	Id *int `json:"id,optional"`
	// url唯一标识
	Key *string `json:"key,optional"`
	// url 名称
	Name *string `json:"name,optional"`
	// 描述信息
	Description *string `json:"description,optional,default="`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade url list | UpgradeUrl信息列表数据
// swagger:model UpgradeUrlListResp
type UpgradeUrlListResp struct {
	BaseDataInfo
	// The upgrade url list data | UpgradeUrl信息列表数据
	Data UpgradeUrlListInfo `json:"data"`
}

// The upgrade url list data | UpgradeUrl信息列表数据
// swagger:model UpgradeUrlListInfo
type UpgradeUrlListInfo struct {
	BaseListInfo
	// The upgrade url list data | UpgradeUrl信息列表数据
	Data []UpgradeUrlInfo `json:"data"`
}

// Get upgrade url list request params | UpgradeUrl信息列表请求参数
// swagger:model UpgradeUrlListReq
type UpgradeUrlListReq struct {
	PageInfo
	// url唯一标识
	Key *string `json:"key,optional"`
	// url 名称
	Name *string `json:"name,optional"`
}

// The upgrade url information response | UpgradeUrl信息返回体
// swagger:model UpgradeUrlInfoResp
type UpgradeUrlInfoResp struct {
	BaseDataInfo
	// upgrade url information | UpgradeUrl信息数据
	Data UpgradeUrlInfo `json:"data"`
}

// The data of upgrade dev model information | UpgradeDevModel信息
// swagger:model UpgradeDevModelInfo
type UpgradeDevModelInfo struct {
	Id *int `json:"id,optional"`
	// 设备机型唯一标识
	Key *string `json:"key,optional"`
	// 设备机型名称
	Name *string `json:"name,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade dev model list | UpgradeDevModel信息列表数据
// swagger:model UpgradeDevModelListResp
type UpgradeDevModelListResp struct {
	BaseDataInfo
	// The upgrade dev model list data | UpgradeDevModel信息列表数据
	Data UpgradeDevModelListInfo `json:"data"`
}

// The upgrade dev model list data | UpgradeDevModel信息列表数据
// swagger:model UpgradeDevModelListInfo
type UpgradeDevModelListInfo struct {
	BaseListInfo
	// The upgrade dev model list data | UpgradeDevModel信息列表数据
	Data []UpgradeDevModelInfo `json:"data"`
}

// Get upgrade dev model list request params | UpgradeDevModel信息列表请求参数
// swagger:model UpgradeDevModelListReq
type UpgradeDevModelListReq struct {
	PageInfo
	// 设备机型唯一标识
	Key *string `json:"key,optional"`
	// 设备机型名称
	Name *string `json:"name,optional"`
}

// The upgrade dev model information response | UpgradeDevModel信息返回体
// swagger:model UpgradeDevModelInfoResp
type UpgradeDevModelInfoResp struct {
	BaseDataInfo
	// upgrade dev model information | UpgradeDevModel信息数据
	Data UpgradeDevModelInfo `json:"data"`
}

// The data of upgrade url upgrade strategy information | UpgradeUrlUpgradeStrategy信息
// swagger:model UpgradeUrlUpgradeStrategyInfo
type UpgradeUrlUpgradeStrategyInfo struct {
	Id *int `json:"id,optional"`
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional,default="`
	// url应用ID
	UrlId *int `json:"urlId,optional"`
	// url_version_id; 外键url_version.id
	UrlVersionId *int `json:"urlVersionId,optional"`
	// 升级任务开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData         *string `json:"upgradeDevData,optional"`
	UpgradeDevTypeZeroData *string `json:"upgradeDevTypeZeroData,optional"`
	UpgradeDevTypeOneData  []int   `json:"upgradeDevTypeOneData,optional"`
	UpgradeDevTypeTwoData  []int   `json:"upgradeDevTypeTwoData,optional"`
	// 指定升级的应用版本：0：全部版本；1，指定版本
	UpgradeVersionType *int32 `json:"upgradeVersionType,optional"`
	// 升级应用版本数据：0.当为全部版本时，此字段为空；1.当指定版本时，此字段存储版本id；
	UpgradeVersionData         *string `json:"upgradeVersionData,optional"`
	UpgradeVersionTypeZeroData *string `json:"upgradeVersionTypeZeroData,optional"`
	UpgradeVersionTypeOneData  []int   `json:"upgradeVersionTypeOneData,optional"`
	// 是否开启灰度
	IsGray *int32 `json:"isGray,optional"`
	// 灰度策略数据
	GrayDataInfo []*GrayDataInfo `json:"grayDataList,optional"`
	// 是否开启频控
	IsFlowLimit *int32 `json:"isFlowLimit,optional"`
	// 频控策略数据
	FlowLimitDataInfo []*FlowLimitDataInfo `json:"flowLimitDataList,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// swagger:model RespUpgradeUrlUpgradeStrategyInfo
type RespUpgradeUrlUpgradeStrategyInfo struct {
	Id *int `json:"id,optional"`
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional,default="`
	// url应用ID
	UrlId *int `json:"urlId,optional"`
	// url应用
	UrlName *string `json:"urlName,optional"`
	// url_version_id; 外键url_version.id
	UrlVersionId *int `json:"urlVersionId,optional"`
	// url版本名
	UrlVersionName *string `json:"urlVersionName,optional"`
	// url版本号
	UrlVersionCode *int `json:"urlVersionCode,optional"`
	// 升级任务开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData         *string `json:"upgradeDevData,optional"`
	UpgradeDevTypeZeroData *string `json:"upgradeDevTypeZeroData,optional"`
	UpgradeDevTypeOneData  []int   `json:"upgradeDevTypeOneData,optional"`
	UpgradeDevTypeTwoData  []int   `json:"upgradeDevTypeTwoData,optional"`
	// 指定升级的应用版本：0：全部版本；1，指定版本
	UpgradeVersionType *int32 `json:"upgradeVersionType,optional"`
	// 升级应用版本数据：0.当为全部版本时，此字段为空；1.当指定版本时，此字段存储版本id；
	UpgradeVersionData         *string `json:"upgradeVersionData,optional"`
	UpgradeVersionTypeZeroData *string `json:"upgradeVersionTypeZeroData,optional"`
	UpgradeVersionTypeOneData  []int   `json:"upgradeVersionTypeOneData,optional"`
	// 是否开启灰度
	IsGray *int32 `json:"isGray,optional"`
	// 灰度策略数据
	GrayDataInfo []*GrayDataInfo `json:"grayDataList,optional"`
	// 是否开启频控
	IsFlowLimit *int32 `json:"isFlowLimit,optional"`
	// 频控策略数据
	FlowLimitDataInfo []*FlowLimitDataInfo `json:"flowLimitDataList,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// 灰度策略数据
// swagger:model GrayDataInfo
type GrayDataInfo struct {
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 数量
	Limit *int `json:"limit,optional"`
}

// 频控策略数据
// swagger:model FlowLimitDataInfo
type FlowLimitDataInfo struct {
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 开始时间
	Begintime *string `json:"beginTime,optional"`
	// 结束时间
	Endtime *string `json:"endTime,optional"`
	// 流控维度
	Dimension *int32 `json:"dimension,optional"`
	// 数量
	Limit *int `json:"limit,optional"`
}

// The response data of upgrade url upgrade strategy list | UpgradeUrlUpgradeStrategy信息列表数据
// swagger:model UpgradeUrlUpgradeStrategyListResp
type UpgradeUrlUpgradeStrategyListResp struct {
	BaseDataInfo
	// The upgrade url upgrade strategy list data | UpgradeUrlUpgradeStrategy信息列表数据
	Data UpgradeUrlUpgradeStrategyListInfo `json:"data"`
}

// The upgrade url upgrade strategy list data | UpgradeUrlUpgradeStrategy信息列表数据
// swagger:model UpgradeUrlUpgradeStrategyListInfo
type UpgradeUrlUpgradeStrategyListInfo struct {
	BaseListInfo
	// The upgrade url upgrade strategy list data | UpgradeUrlUpgradeStrategy信息列表数据
	Data []RespUpgradeUrlUpgradeStrategyInfo `json:"data"`
}

// Get upgrade url upgrade strategy list request params | UpgradeUrlUpgradeStrategy信息列表请求参数
// swagger:model UpgradeUrlUpgradeStrategyListReq
type UpgradeUrlUpgradeStrategyListReq struct {
	PageInfo
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// url应用ID
	UrlId *int `json:"urlId,optional"`
}

// The upgrade url upgrade strategy information response | UpgradeUrlUpgradeStrategy信息返回体
// swagger:model UpgradeUrlUpgradeStrategyInfoResp
type UpgradeUrlUpgradeStrategyInfoResp struct {
	BaseDataInfo
	// upgrade url upgrade strategy information | UpgradeUrlUpgradeStrategy信息数据
	Data RespUpgradeUrlUpgradeStrategyInfo `json:"data"`
}

// The data of upgrade url version information | UpgradeUrlVersion信息
// swagger:model UpgradeUrlVersionInfo
type UpgradeUrlVersionInfo struct {
	Id *int `json:"id,optional"`
	// url应用ID
	UrlId *int `json:"urlId,optional"`
	// url链接
	UrlPath *string `json:"urlPath,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 描述信息
	Description *string `json:"description,optional,default="`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// swagger:model RespUpgradeUrlVersionInfo
type RespUpgradeUrlVersionInfo struct {
	Id *int `json:"id,optional"`
	// url应用ID
	UrlId *int `json:"urlId,optional"`
	// url应用
	UrlName *string `json:"urlName,optional"`
	// url链接
	UrlPath *string `json:"urlPath,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 描述信息
	Description *string `json:"description,optional,default="`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade url version list | UpgradeUrlVersion信息列表数据
// swagger:model UpgradeUrlVersionListResp
type UpgradeUrlVersionListResp struct {
	BaseDataInfo
	// The upgrade url version list data | UpgradeUrlVersion信息列表数据
	Data UpgradeUrlVersionListInfo `json:"data"`
}

// The upgrade url version list data | UpgradeUrlVersion信息列表数据
// swagger:model UpgradeUrlVersionListInfo
type UpgradeUrlVersionListInfo struct {
	BaseListInfo
	// The upgrade url version list data | UpgradeUrlVersion信息列表数据
	Data []RespUpgradeUrlVersionInfo `json:"data"`
}

// Get upgrade url version list request params | UpgradeUrlVersion信息列表请求参数
// swagger:model UpgradeUrlVersionListReq
type UpgradeUrlVersionListReq struct {
	PageInfo
	// url应用ID
	UrlId *int `json:"urlId,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// url链接
	UrlPath *string `json:"urlPath,optional"`
}

// The upgrade url version information response | UpgradeUrlVersion信息返回体
// swagger:model UpgradeUrlVersionInfoResp
type UpgradeUrlVersionInfoResp struct {
	BaseDataInfo
	// upgrade url version information | UpgradeUrlVersion信息数据
	Data UpgradeUrlVersionInfo `json:"data"`
}

// swagger:model UpgradeDashboardInfo
type UpgradeDashboardInfo struct {
	// 昨日应用下载次数  /  总下载次数
	YesterdayDownloadCount *int `json:"yesterdayDownloadCount,optional"`
	TotalDownloadCount     *int `json:"totalDownloadCount,optional"`
	// 昨日应用获取升级次数 /  总应用获取升级次数
	YesterdayAppGetStrategyCount *int `json:"yesterdayAppGetStrategyCount,optional"`
	TotalAppGetStrategyCount     *int `json:"totalAppGetStrategyCount,optional"`
	// 昨日应用升级次数 /  总应用升级次数
	YesterdayAppUpgradeCount *int `json:"yesterdayAppUpgradeCount,optional"`
	TotalAppUpgradeCount     *int `json:"totalAppUpgradeCount,optional"`
	// 昨日应用启动次数 /  总应用启动次数
	YesterdayAppStartCount *int `json:"yesterdayAppStartCount,optional"`
	TotalAppStartCount     *int `json:"totalAppStartCount,optional"`
	// 近 7 天 流量使用  （展示多应用）
	TrafficUsageCount7Day TrafficUsageCount7Day `json:"trafficUsageCount7Day,optional"`
	// 近 7 天 应用下载次数  （展示多应用）
	DownloadCount7Day DownloadCount7Day `json:"downloadCount7Day,optional"`
	// 近 7 天 获取应用升级次数  （展示多应用）
	AppGetStrategyCount7Day AppGetStrategyCount7Day `json:"appGetStrategyCount7Day,optional"`
	// 近 7 天 应用升级次数  （展示多应用）
	AppUpgradeCount7Day AppUpgradeCount7Day `json:"appUpgradeCount7Day,optional"`
	// 近 7 天 应用启动次数  （展示多应用）
	AppStartCount7Day AppStartCount7Day `json:"appStartCount7Day,optional"`
	// 昨日新增设备数量
	YesterdayNewDevCount *int `json:"yesterdayNewDevCount,optional"`
	// 总设备数量
	TotalDevCount *int `json:"totalDevCount,optional"`
	// 昨日请求次数
	YesterdayReqCount *int `json:"yesterdayReqCount,optional"`
	// 总请求次数
	TotalReqCount *int `json:"totalReqCount,optional"`
	// 近 7天设备新增量
	DevCount7Day DevCount7Day `json:"devCount7Day,optional"`
	// 近 7天接口请求次数
	ReqCount7Day ReqCount7Day `json:"reqCount7Day,optional"`
}

type TrafficUsageCount7Day struct {
	TimeData []string                          `json:"timeData"` // time 时间 x 轴
	Series   []TrafficUsageCount7DaySeriesItem `json:"series"`   // 数据
}

type TrafficUsageCount7DaySeriesItem struct {
	Data    []float32 `json:"data"`    // y 轴数据
	AppName string    `json:"appName"` // 应用名称
}

type DownloadCount7Day struct {
	TimeData []string                      `json:"timeData"` // time 时间 x 轴
	Series   []DownloadCount7DaySeriesItem `json:"series"`   // 数据
}

type DownloadCount7DaySeriesItem struct {
	Data    []int  `json:"data"`    // y 轴数据
	AppName string `json:"appName"` // 应用名称
}

type AppUpgradeCount7Day struct {
	TimeData []string                        `json:"timeData"` // time 时间 x 轴
	Series   []AppUpgradeCount7DaySeriesItem `json:"series"`   // 数据
}

type AppUpgradeCount7DaySeriesItem struct {
	Data    []int  `json:"data"`    // y 轴数据
	AppName string `json:"appName"` // 应用名称
}

type AppGetStrategyCount7Day struct {
	TimeData []string                            `json:"timeData"` // time 时间 x 轴
	Series   []AppGetStrategyCount7DaySeriesItem `json:"series"`   // 数据
}

type AppGetStrategyCount7DaySeriesItem struct {
	Data    []int  `json:"data"`    // y 轴数据
	AppName string `json:"appName"` // 应用名称
}

type AppStartCount7Day struct {
	TimeData []string                      `json:"timeData"` // time 时间 x 轴
	Series   []AppStartCount7DaySeriesItem `json:"series"`   // 数据
}

type AppStartCount7DaySeriesItem struct {
	Data    []int  `json:"data"`    // y 轴数据
	AppName string `json:"appName"` // 应用名称
}

type DevCount7Day struct {
	TimeData []string                 `json:"timeData"` // time 时间 x 轴
	Series   []DevCount7DaySeriesItem `json:"series"`   // 数据
}

type DevCount7DaySeriesItem struct {
	Data    []int  `json:"data"`    // y 轴数据
	AppName string `json:"appName"` // 应用名称
}

type ReqCount7Day struct {
	TimeData []string                 `json:"timeData"` // time 时间 x 轴
	Series   []ReqCount7DaySeriesItem `json:"series"`   // 数据
}

type ReqCount7DaySeriesItem struct {
	Data    []int  `json:"data"`    // y 轴数据
	AppName string `json:"appName"` // 应用名称
}

// swagger:model UpgradeDashboardResp
type UpgradeDashboardResp struct {
	BaseDataInfo
	Data UpgradeDashboardInfo `json:"data"`
}

// swagger:model TaruiAppUpgradeDashboardInfo
type TaruiAppUpgradeDashboardInfo struct {
	// 近 7 天 应用下载次数  （展示多应用）
	DownloadCount7Day DownloadCount7Day `json:"downloadCount7Day,optional"`
	// 近 7 天 应用启动次数  （展示多应用）
	AppStartCount7Day AppStartCount7Day `json:"appStartCount7Day,optional"`
	// 近 7 天 应用升级次数  （展示多应用）
	AppUpgradeCount7Day AppUpgradeCount7Day `json:"appUpgradeCount7Day,optional"`
}

type TaruiAppDownloadCount7Day struct {
	TimeData []string                      `json:"timeData"` // time 时间 x 轴
	Series   []DownloadCount7DaySeriesItem `json:"series"`   // 数据
}

type TaruiAppDownloadCount7DaySeriesItem struct {
	Data    []int  `json:"data"`    // y 轴数据
	AppName string `json:"appName"` // 应用名称
}

type TaruiAppAppStartCount7Day struct {
	TimeData []string                      `json:"timeData"` // time 时间 x 轴
	Series   []AppStartCount7DaySeriesItem `json:"series"`   // 数据
}

type TaruiAppAppStartCount7DaySeriesItem struct {
	Data    []int  `json:"data"`    // y 轴数据
	AppName string `json:"appName"` // 应用名称
}

type TaruiAppAppUpgradeCount7Day struct {
	TimeData []string                        `json:"timeData"` // time 时间 x 轴
	Series   []AppUpgradeCount7DaySeriesItem `json:"series"`   // 数据
}

type TaruiAppAppUpgradeCount7DaySeriesItem struct {
	Data    []int  `json:"data"`    // y 轴数据
	AppName string `json:"appName"` // 应用名称
}

// swagger:model TaruiAppUpgradeDashboardResp
type TaruiAppUpgradeDashboardResp struct {
	BaseDataInfo
	Data TaruiAppUpgradeDashboardInfo `json:"data"`
}

// The data of upgrade file information | UpgradeFile信息
// swagger:model UpgradeFileInfo
type UpgradeFileInfo struct {
	Id *int `json:"id,optional"`
	// 文件应用唯一标识
	Key *string `json:"key,optional"`
	// 文件应用名称
	Name *string `json:"name,optional"`
	// 描述信息
	Description *string `json:"description,optional,default="`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade file list | UpgradeFile信息列表数据
// swagger:model UpgradeFileListResp
type UpgradeFileListResp struct {
	BaseDataInfo
	// The upgrade file list data | UpgradeFile信息列表数据
	Data UpgradeFileListInfo `json:"data"`
}

// The upgrade file list data | UpgradeFile信息列表数据
// swagger:model UpgradeFileListInfo
type UpgradeFileListInfo struct {
	BaseListInfo
	// The upgrade file list data | UpgradeFile信息列表数据
	Data []UpgradeFileInfo `json:"data"`
}

// Get upgrade file list request params | UpgradeFile信息列表请求参数
// swagger:model UpgradeFileListReq
type UpgradeFileListReq struct {
	PageInfo
	// 文件应用唯一标识
	Key *string `json:"key,optional"`
	// 文件应用名称
	Name *string `json:"name,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade file information response | UpgradeFile信息返回体
// swagger:model UpgradeFileInfoResp
type UpgradeFileInfoResp struct {
	BaseDataInfo
	// upgrade file information | UpgradeFile信息数据
	Data UpgradeFileInfo `json:"data"`
}

// The data of upgrade file upgrade strategy information | UpgradeFileUpgradeStrategy信息
// swagger:model UpgradeFileUpgradeStrategyInfo
type UpgradeFileUpgradeStrategyInfo struct {
	Id *int `json:"id,optional"`
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional,default="`
	// 文件应用ID
	FileId *int `json:"fileId,optional"`
	// file_version_id; 外键file_version.id
	FileVersionId *int `json:"fileVersionId,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData         *string `json:"upgradeDevData,optional"`
	UpgradeDevTypeZeroData *string `json:"upgradeDevTypeZeroData,optional"`
	UpgradeDevTypeOneData  []int   `json:"upgradeDevTypeOneData,optional"`
	UpgradeDevTypeTwoData  []int   `json:"upgradeDevTypeTwoData,optional"`
	// 指定升级的应用版本：0：全部版本；1，指定版本
	UpgradeVersionType *int32 `json:"upgradeVersionType,optional"`
	// 升级应用版本数据：0.当为全部版本时，此字段为空；1.当指定版本时，此字段存储版本id；
	UpgradeVersionData         *string `json:"upgradeVersionData,optional"`
	UpgradeVersionTypeZeroData *string `json:"upgradeVersionTypeZeroData,optional"`
	UpgradeVersionTypeOneData  []int   `json:"upgradeVersionTypeOneData,optional"`
	// 升级任务开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 是否开启灰度
	IsGray *int32 `json:"isGray,optional"`
	// 灰度策略数据
	GrayDataInfo []*FileGrayDataInfo `json:"grayDataList,optional"`
	// 是否开启频控
	IsFlowLimit *int32 `json:"isFlowLimit,optional"`
	// 频控策略数据
	FlowLimitDataInfo []*FileFlowLimitDataInfo `json:"flowLimitDataList,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// swagger:model RespUpgradeFileUpgradeStrategyInfo
type RespUpgradeFileUpgradeStrategyInfo struct {
	Id *int `json:"id,optional"`
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional,default="`
	// 文件应用ID
	FileId *int `json:"fileId,optional"`
	// 文件应用名称
	FileName *string `json:"fileName,optional"`
	// file_version_id; 外键file_version.id
	FileVersionId *int `json:"fileVersionId,optional"`
	// 文件应用版本名称
	FileVersionName *string `json:"fileVersionName,optional"`
	FileVersionCode *int    `json:"fileVersionCode,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData         *string `json:"upgradeDevData,optional"`
	UpgradeDevTypeZeroData *string `json:"upgradeDevTypeZeroData,optional"`
	UpgradeDevTypeOneData  []int   `json:"upgradeDevTypeOneData,optional"`
	UpgradeDevTypeTwoData  []int   `json:"upgradeDevTypeTwoData,optional"`
	// 指定升级的应用版本：0：全部版本；1，指定版本
	UpgradeVersionType *int32 `json:"upgradeVersionType,optional"`
	// 升级应用版本数据：0.当为全部版本时，此字段为空；1.当指定版本时，此字段存储版本id；
	UpgradeVersionData         *string `json:"upgradeVersionData,optional"`
	UpgradeVersionTypeZeroData *string `json:"upgradeVersionTypeZeroData,optional"`
	UpgradeVersionTypeOneData  []int   `json:"upgradeVersionTypeOneData,optional"`
	// 升级任务开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 是否开启灰度
	IsGray *int32 `json:"isGray,optional"`
	// 灰度策略数据
	GrayDataInfo []*FileGrayDataInfo `json:"grayDataList,optional"`
	// 是否开启频控
	IsFlowLimit *int32 `json:"isFlowLimit,optional"`
	// 频控策略数据
	FlowLimitDataInfo []*FileFlowLimitDataInfo `json:"flowLimitDataList,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// 灰度策略数据
// swagger:model FileGrayDataInfo
type FileGrayDataInfo struct {
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 数量
	Limit *int `json:"limit,optional"`
}

// 频控策略数据
// swagger:model FileFlowLimitDataInfo
type FileFlowLimitDataInfo struct {
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 开始时间
	Begintime *string `json:"beginTime,optional"`
	// 结束时间
	Endtime *string `json:"endTime,optional"`
	// 流控维度
	Dimension *int32 `json:"dimension,optional"`
	// 数量
	Limit *int `json:"limit,optional"`
}

// The response data of upgrade file upgrade strategy list | UpgradeFileUpgradeStrategy信息列表数据
// swagger:model UpgradeFileUpgradeStrategyListResp
type UpgradeFileUpgradeStrategyListResp struct {
	BaseDataInfo
	// The upgrade file upgrade strategy list data | UpgradeFileUpgradeStrategy信息列表数据
	Data UpgradeFileUpgradeStrategyListInfo `json:"data"`
}

// The upgrade file upgrade strategy list data | UpgradeFileUpgradeStrategy信息列表数据
// swagger:model UpgradeFileUpgradeStrategyListInfo
type UpgradeFileUpgradeStrategyListInfo struct {
	BaseListInfo
	// The upgrade file upgrade strategy list data | UpgradeFileUpgradeStrategy信息列表数据
	Data []RespUpgradeFileUpgradeStrategyInfo `json:"data"`
}

// Get upgrade file upgrade strategy list request params | UpgradeFileUpgradeStrategy信息列表请求参数
// swagger:model UpgradeFileUpgradeStrategyListReq
type UpgradeFileUpgradeStrategyListReq struct {
	PageInfo
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional,default="`
	// 文件应用ID
	FileId *int `json:"fileId,optional"`
	// file_version_id; 外键file_version.id
	FileVersionId *int `json:"fileVersionId,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData *string `json:"upgradeDevData,optional"`
	// 升级任务开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade file upgrade strategy information response | UpgradeFileUpgradeStrategy信息返回体
// swagger:model UpgradeFileUpgradeStrategyInfoResp
type UpgradeFileUpgradeStrategyInfoResp struct {
	BaseDataInfo
	// upgrade file upgrade strategy information | UpgradeFileUpgradeStrategy信息数据
	Data RespUpgradeFileUpgradeStrategyInfo `json:"data"`
}

// The data of upgrade file version information | UpgradeFileVersion信息
// swagger:model UpgradeFileVersionInfo
type UpgradeFileVersionInfo struct {
	Id *int `json:"id,optional"`
	// 文件应用id
	FileId *int `json:"fileId,optional"`
	// 云文件id
	CloudFileId *string `json:"cloudFileId,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 版本文件大小
	VersionFileSize *string `json:"versionFileSize,optional"`
	// 描述信息
	Description *string `json:"description,optional,default="`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// swagger:model RespUpgradeFileVersionInfo
type RespUpgradeFileVersionInfo struct {
	Id *int `json:"id,optional"`
	// 文件应用id
	FileId *int `json:"fileId,optional"`
	// 文件应用名称
	FileName *string `json:"fileName,optional"`
	// 云文件id
	CloudFileId *string `json:"cloudFileId,optional"`
	// 云文件名称
	CloudFileName *string `json:"cloudFileName,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 版本文件大小
	VersionFileSize *string `json:"versionFileSize,optional"`
	// 描述信息
	Description *string `json:"description,optional,default="`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade file version list | UpgradeFileVersion信息列表数据
// swagger:model UpgradeFileVersionListResp
type UpgradeFileVersionListResp struct {
	BaseDataInfo
	// The upgrade file version list data | UpgradeFileVersion信息列表数据
	Data UpgradeFileVersionListInfo `json:"data"`
}

// The upgrade file version list data | UpgradeFileVersion信息列表数据
// swagger:model UpgradeFileVersionListInfo
type UpgradeFileVersionListInfo struct {
	BaseListInfo
	// The upgrade file version list data | UpgradeFileVersion信息列表数据
	Data []RespUpgradeFileVersionInfo `json:"data"`
}

// Get upgrade file version list request params | UpgradeFileVersion信息列表请求参数
// swagger:model UpgradeFileVersionListReq
type UpgradeFileVersionListReq struct {
	PageInfo
	// 文件应用ID
	FileId *int `json:"fileId,optional"`
	// 云文件id
	CloudFileId *string `json:"cloudFileId,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 描述信息
	Description *string `json:"description,optional,default="`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade file version information response | UpgradeFileVersion信息返回体
// swagger:model UpgradeFileVersionInfoResp
type UpgradeFileVersionInfoResp struct {
	BaseDataInfo
	// upgrade file version information | UpgradeFileVersion信息数据
	Data RespUpgradeFileVersionInfo `json:"data"`
}

// The data of upgrade dev information | UpgradeDev信息
// swagger:model UpgradeDevInfo
type UpgradeDevInfo struct {
	Id *int `json:"id,optional"`
	// 设备唯一标识
	Key *string `json:"key,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// DevGroup
	DevGroupIds []uint64 `json:"devGroupIds,optional,omitempty"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade dev list | UpgradeDev信息列表数据
// swagger:model UpgradeDevListResp
type UpgradeDevListResp struct {
	BaseDataInfo
	// The upgrade dev list data | UpgradeDev信息列表数据
	Data UpgradeDevListInfo `json:"data"`
}

// The upgrade dev list data | UpgradeDev信息列表数据
// swagger:model UpgradeDevListInfo
type UpgradeDevListInfo struct {
	BaseListInfo
	// The upgrade dev list data | UpgradeDev信息列表数据
	Data []UpgradeDevInfo `json:"data"`
}

// Get upgrade dev list request params | UpgradeDev信息列表请求参数
// swagger:model UpgradeDevListReq
type UpgradeDevListReq struct {
	PageInfo
	// 设备唯一标识
	Key *string `json:"key,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade dev information response | UpgradeDev信息返回体
// swagger:model UpgradeDevInfoResp
type UpgradeDevInfoResp struct {
	BaseDataInfo
	// upgrade dev information | UpgradeDev信息数据
	Data UpgradeDevInfo `json:"data"`
}

// The data of upgrade dev group information | UpgradeDevGroup信息
// swagger:model UpgradeDevGroupInfo
type UpgradeDevGroupInfo struct {
	Id *int `json:"id,optional"`
	// 设备分组名称
	Name *string `json:"name,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade dev group list | UpgradeDevGroup信息列表数据
// swagger:model UpgradeDevGroupListResp
type UpgradeDevGroupListResp struct {
	BaseDataInfo
	// The upgrade dev group list data | UpgradeDevGroup信息列表数据
	Data UpgradeDevGroupListInfo `json:"data"`
}

// The upgrade dev group list data | UpgradeDevGroup信息列表数据
// swagger:model UpgradeDevGroupListInfo
type UpgradeDevGroupListInfo struct {
	BaseListInfo
	// The upgrade dev group list data | UpgradeDevGroup信息列表数据
	Data []UpgradeDevGroupInfo `json:"data"`
}

// Get upgrade dev group list request params | UpgradeDevGroup信息列表请求参数
// swagger:model UpgradeDevGroupListReq
type UpgradeDevGroupListReq struct {
	PageInfo
	// 设备分组名称
	Name *string `json:"name,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade dev group information response | UpgradeDevGroup信息返回体
// swagger:model UpgradeDevGroupInfoResp
type UpgradeDevGroupInfoResp struct {
	BaseDataInfo
	// upgrade dev group information | UpgradeDevGroup信息数据
	Data UpgradeDevGroupInfo `json:"data"`
}

// The data of upgrade dev group relation information | UpgradeDevGroupRelation信息
// swagger:model UpgradeDevGroupRelationInfo
type UpgradeDevGroupRelationInfo struct {
	Id *int `json:"id,optional"`
	// 设备id
	DevId *int `json:"devId,optional"`
	// 设备分组 id
	DevGroupId *int `json:"devGroupId,optional"`
}

// The response data of upgrade dev group relation list | UpgradeDevGroupRelation信息列表数据
// swagger:model UpgradeDevGroupRelationListResp
type UpgradeDevGroupRelationListResp struct {
	BaseDataInfo
	// The upgrade dev group relation list data | UpgradeDevGroupRelation信息列表数据
	Data UpgradeDevGroupRelationListInfo `json:"data"`
}

// The upgrade dev group relation list data | UpgradeDevGroupRelation信息列表数据
// swagger:model UpgradeDevGroupRelationListInfo
type UpgradeDevGroupRelationListInfo struct {
	BaseListInfo
	// The upgrade dev group relation list data | UpgradeDevGroupRelation信息列表数据
	Data []UpgradeDevGroupRelationInfo `json:"data"`
}

// Get upgrade dev group relation list request params | UpgradeDevGroupRelation信息列表请求参数
// swagger:model UpgradeDevGroupRelationListReq
type UpgradeDevGroupRelationListReq struct {
	PageInfo
	// 设备id
	DevId *int `json:"devId,optional"`
	// 设备分组 id
	DevGroupId *int `json:"devGroupId,optional"`
}

// The upgrade dev group relation information response | UpgradeDevGroupRelation信息返回体
// swagger:model UpgradeDevGroupRelationInfoResp
type UpgradeDevGroupRelationInfoResp struct {
	BaseDataInfo
	// upgrade dev group relation information | UpgradeDevGroupRelation信息数据
	Data UpgradeDevGroupRelationInfo `json:"data"`
}

// The data of upgrade tauri information | UpgradeTauri信息
// swagger:model UpgradeTauriInfo
type UpgradeTauriInfo struct {
	Id *int `json:"id,optional"`
	// tauri应用唯一标识
	Key *string `json:"key,optional"`
	// tauri应用名称
	Name *string `json:"name,optional"`
	// 描述信息
	Description *string `json:"description,optional,default="`
	// github_url
	GithubUrl *string `json:"githubUrl,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade tauri list | UpgradeTauri信息列表数据
// swagger:model UpgradeTauriListResp
type UpgradeTauriListResp struct {
	BaseDataInfo
	// The upgrade tauri list data | UpgradeTauri信息列表数据
	Data UpgradeTauriListInfo `json:"data"`
}

// The upgrade tauri list data | UpgradeTauri信息列表数据
// swagger:model UpgradeTauriListInfo
type UpgradeTauriListInfo struct {
	BaseListInfo
	// The upgrade tauri list data | UpgradeTauri信息列表数据
	Data []UpgradeTauriInfo `json:"data"`
}

// Get upgrade tauri list request params | UpgradeTauri信息列表请求参数
// swagger:model UpgradeTauriListReq
type UpgradeTauriListReq struct {
	PageInfo
	// 公司ID
	CompanyId *int `json:"companyId,optional"`
	// tauri应用唯一标识
	Key *string `json:"key,optional"`
	// tauri应用名称
	Name *string `json:"name,optional"`
	// github_url
	GithubUrl *string `json:"githubUrl,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade tauri information response | UpgradeTauri信息返回体
// swagger:model UpgradeTauriInfoResp
type UpgradeTauriInfoResp struct {
	BaseDataInfo
	// upgrade tauri information | UpgradeTauri信息数据
	Data UpgradeTauriInfo `json:"data"`
}

// The data of upgrade tauri upgrade strategy information | UpgradeTauriUpgradeStrategy信息
// swagger:model UpgradeTauriUpgradeStrategyInfo
type UpgradeTauriUpgradeStrategyInfo struct {
	Id *int `json:"id,optional"`
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional,default="`
	// Tauri应用ID
	TauriId *int `json:"tauriId,optional"`
	// tauri_version_id; 外键tauri_version.id
	TauriVersionId *int `json:"tauriVersionId,optional"`
	// 升级任务开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData         *string `json:"upgradeDevData,optional"`
	UpgradeDevTypeZeroData *string `json:"upgradeDevTypeZeroData,optional"`
	UpgradeDevTypeOneData  []int   `json:"upgradeDevTypeOneData,optional"`
	UpgradeDevTypeTwoData  []int   `json:"upgradeDevTypeTwoData,optional"`
	// 指定升级的应用版本：0：全部版本；1，指定版本
	UpgradeVersionType *int32 `json:"upgradeVersionType,optional"`
	// 升级应用版本数据：0.当为全部版本时，此字段为空；1.当指定版本时，此字段存储版本id；
	UpgradeVersionData         *string `json:"upgradeVersionData,optional"`
	UpgradeVersionTypeZeroData *string `json:"upgradeVersionTypeZeroData,optional"`
	UpgradeVersionTypeOneData  []int   `json:"upgradeVersionTypeOneData,optional"`
	// 是否开启灰度
	IsGray *int32 `json:"isGray,optional"`
	// 灰度策略数据
	GrayDataInfo []*TauriGrayDataInfo `json:"grayDataList,optional"`
	// 是否开启频控
	IsFlowLimit *int32 `json:"isFlowLimit,optional"`
	// 频控策略数据
	FlowLimitDataInfo []*TauriFlowLimitDataInfo `json:"flowLimitDataList,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// swagger:model RespUpgradeTauriUpgradeStrategyInfo
type RespUpgradeTauriUpgradeStrategyInfo struct {
	Id *int `json:"id,optional"`
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional,default="`
	// Tauri应用ID
	TauriId *int `json:"tauriId,optional"`
	// Tauri应用名称
	TauriName *string `json:"tauriName,optional"`
	// tauri_version_id; 外键tauri_version.id
	TauriVersionId *int `json:"tauriVersionId,optional"`
	// Tauri应用版本名称
	TauriVersionName *string `json:"tauriVersionName,optional"`
	TauriVersionCode *int    `json:"tauriVersionCode,optional"`
	TauriTarget      *string `json:"tauriTarget,optional"`
	TauriArch        *string `json:"tauriArch,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData         *string `json:"upgradeDevData,optional"`
	UpgradeDevTypeZeroData *string `json:"upgradeDevTypeZeroData,optional"`
	UpgradeDevTypeOneData  []int   `json:"upgradeDevTypeOneData,optional"`
	UpgradeDevTypeTwoData  []int   `json:"upgradeDevTypeTwoData,optional"`
	// 指定升级的应用版本：0：全部版本；1，指定版本
	UpgradeVersionType *int32 `json:"upgradeVersionType,optional"`
	// 升级应用版本数据：0.当为全部版本时，此字段为空；1.当指定版本时，此字段存储版本id；
	UpgradeVersionData         *string `json:"upgradeVersionData,optional"`
	UpgradeVersionTypeZeroData *string `json:"upgradeVersionTypeZeroData,optional"`
	UpgradeVersionTypeOneData  []int   `json:"upgradeVersionTypeOneData,optional"`
	// 升级任务开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 是否开启灰度
	IsGray *int32 `json:"isGray,optional"`
	// 灰度策略数据
	GrayDataInfo []*TauriGrayDataInfo `json:"grayDataList,optional"`
	// 是否开启频控
	IsFlowLimit *int32 `json:"isFlowLimit,optional"`
	// 频控策略数据
	FlowLimitDataInfo []*TauriFlowLimitDataInfo `json:"flowLimitDataList,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// 灰度策略数据
// swagger:model TauriGrayDataInfo
type TauriGrayDataInfo struct {
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 数量
	Limit *int `json:"limit,optional"`
}

// 频控策略数据
// swagger:model TauriFlowLimitDataInfo
type TauriFlowLimitDataInfo struct {
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 开始时间
	Begintime *string `json:"beginTime,optional"`
	// 结束时间
	Endtime *string `json:"endTime,optional"`
	// 流控维度
	Dimension *int32 `json:"dimension,optional"`
	// 数量
	Limit *int `json:"limit,optional"`
}

// The response data of upgrade tauri upgrade strategy list | UpgradeTauriUpgradeStrategy信息列表数据
// swagger:model UpgradeTauriUpgradeStrategyListResp
type UpgradeTauriUpgradeStrategyListResp struct {
	BaseDataInfo
	// The upgrade tauri upgrade strategy list data | UpgradeTauriUpgradeStrategy信息列表数据
	Data UpgradeTauriUpgradeStrategyListInfo `json:"data"`
}

// The upgrade tauri upgrade strategy list data | UpgradeTauriUpgradeStrategy信息列表数据
// swagger:model UpgradeTauriUpgradeStrategyListInfo
type UpgradeTauriUpgradeStrategyListInfo struct {
	BaseListInfo
	// The upgrade tauri upgrade strategy list data | UpgradeTauriUpgradeStrategy信息列表数据
	Data []RespUpgradeTauriUpgradeStrategyInfo `json:"data"`
}

// Get upgrade tauri upgrade strategy list request params | UpgradeTauriUpgradeStrategy信息列表请求参数
// swagger:model UpgradeTauriUpgradeStrategyListReq
type UpgradeTauriUpgradeStrategyListReq struct {
	PageInfo
	// 公司ID
	CompanyId *int `json:"companyId,optional"`
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional"`
	// 文件应用ID
	TauriId *int `json:"tauriId,optional"`
	// tauri_version_id; 外键tauri_version.id
	TauriVersionId *int `json:"tauriVersionId,optional"`
	// 升级任务开始时间
	BeginDatetime *int64 `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *int64 `json:"endDatetime,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData *string `json:"upgradeDevData,optional"`
	// 指定升级的应用版本：0：全部版本；1：指定版本
	UpgradeVersionType *int32 `json:"upgradeVersionType,optional"`
	// 升级设备数据：0.当为全部版本时，此字段为空；；1.当指定应用版本时，此字段存储应用版本id;
	UpgradeVersionData *string `json:"upgradeVersionData,optional"`
	// 是否开启灰度 0：不开启；1：开启
	IsGray *int32 `json:"isGray,optional"`
	// 灰度策略id数据
	GrayData *string `json:"grayData,optional"`
	// 是否开启频控 0：不开启；1：开启
	IsFlowLimit *int32 `json:"isFlowLimit,optional"`
	// 频控策略id数据
	FlowLimitData *string `json:"flowLimitData,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade tauri upgrade strategy information response | UpgradeTauriUpgradeStrategy信息返回体
// swagger:model UpgradeTauriUpgradeStrategyInfoResp
type UpgradeTauriUpgradeStrategyInfoResp struct {
	BaseDataInfo
	// upgrade tauri upgrade strategy information | UpgradeTauriUpgradeStrategy信息数据
	Data RespUpgradeTauriUpgradeStrategyInfo `json:"data"`
}

// The data of upgrade tauri version information | UpgradeTauriVersion信息
// swagger:model UpgradeTauriVersionInfo
type UpgradeTauriVersionInfo struct {
	Id *int `json:"id,optional"`
	// tauri应用ID
	TauriId *int `json:"tauriId,optional"`
	// 云文件id
	CloudFileId *string `json:"cloudFileId,optional"`
	// 云文件id 安装文件
	InstallCloudFileId *string `json:"installCloudFileId,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 安装包文件大小
	InstallVersionFileSize *string `json:"installVersionFileSize,optional"`
	// 升级包文件大小
	UpgradeVersionFileSize *string `json:"upgradeVersionFileSize,optional"`
	// 操作系统:linux、darwin、windows
	Target *string `json:"target,optional"`
	// 机器架构:x86_64、i686、aarch64、armv7
	Arch *string `json:"arch,optional"`
	// 生成的 .sig 文件的内容，可能会随着每次构建而改变
	Signature *string `json:"signature,optional"`
	// 描述信息
	Description *string `json:"description,optional,default="`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// swagger:model RespUpgradeTauriVersionInfo
type RespUpgradeTauriVersionInfo struct {
	Id *int `json:"id,optional"`
	// tauri应用ID
	TauriId *int `json:"tauriId,optional"`
	// tauri应用名称
	TauriName *string `json:"tauriName,optional"`
	// 云文件id
	CloudFileId *string `json:"cloudFileId,optional"`
	// 云文件名称
	CloudFileName *string `json:"cloudFileName,optional"`
	// 云文件id 安装文件
	InstallCloudFileId *string `json:"installCloudFileId,optional"`
	// 云文件名称
	InstallCloudFileName *string `json:"InstallCloudFileName,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 安装包文件大小
	InstallVersionFileSize *string `json:"installVersionFileSize,optional"`
	// 升级包文件大小
	UpgradeVersionFileSize *string `json:"upgradeVersionFileSize,optional"`
	// 操作系统:linux、darwin、windows
	Target *string `json:"target,optional"`
	// 机器架构:x86_64、i686、aarch64、armv7
	Arch *string `json:"arch,optional"`
	// 生成的 .sig 文件的内容，可能会随着每次构建而改变
	Signature *string `json:"signature,optional"`
	// 描述信息
	Description *string `json:"description,optional,default="`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade tauri version list | UpgradeTauriVersion信息列表数据
// swagger:model UpgradeTauriVersionListResp
type UpgradeTauriVersionListResp struct {
	BaseDataInfo
	// The upgrade tauri version list data | UpgradeTauriVersion信息列表数据
	Data UpgradeTauriVersionListInfo `json:"data"`
}

// The upgrade tauri version list data | UpgradeTauriVersion信息列表数据
// swagger:model UpgradeTauriVersionListInfo
type UpgradeTauriVersionListInfo struct {
	BaseListInfo
	// The upgrade tauri version list data | UpgradeTauriVersion信息列表数据
	Data []RespUpgradeTauriVersionInfo `json:"data"`
}

// Get upgrade tauri version list request params | UpgradeTauriVersion信息列表请求参数
// swagger:model UpgradeTauriVersionListReq
type UpgradeTauriVersionListReq struct {
	PageInfo
	// tauri应用ID
	TauriId *int `json:"tauriId,optional"`
	// 云文件id
	CloudFileId *string `json:"cloudFileId,optional"`
	// 云文件id 安装文件
	InstallCloudFileId *string `json:"installCloudFileId,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 操作系统:linux、darwin、windows
	Target *string `json:"target,optional"`
	// 机器架构:x86_64、i686、aarch64、armv7
	Arch *string `json:"arch,optional"`
	// 描述信息
	Description *string `json:"description,optional,default="`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade tauri version information response | UpgradeTauriVersion信息返回体
// swagger:model UpgradeTauriVersionInfoResp
type UpgradeTauriVersionInfoResp struct {
	BaseDataInfo
	// upgrade tauri version information | UpgradeTauriVersion信息数据
	Data RespUpgradeTauriVersionInfo `json:"data"`
}

// The data of upgrade configuration information | UpgradeConfiguration信息
// swagger:model UpgradeConfigurationInfo
type UpgradeConfigurationInfo struct {
	Id *int `json:"id,optional"`
	// 公司ID
	CompanyId *int `json:"companyId,optional"`
	// 配置唯一标识
	Key *string `json:"key,optional"`
	// 配置名称
	Name *string `json:"name,optional"`
	// 描述信息
	Description *string `json:"description,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade configuration list | UpgradeConfiguration信息列表数据
// swagger:model UpgradeConfigurationListResp
type UpgradeConfigurationListResp struct {
	BaseDataInfo
	// The upgrade configuration list data | UpgradeConfiguration信息列表数据
	Data UpgradeConfigurationListInfo `json:"data"`
}

// The upgrade configuration list data | UpgradeConfiguration信息列表数据
// swagger:model UpgradeConfigurationListInfo
type UpgradeConfigurationListInfo struct {
	BaseListInfo
	// The upgrade configuration list data | UpgradeConfiguration信息列表数据
	Data []UpgradeConfigurationInfo `json:"data"`
}

// Get upgrade configuration list request params | UpgradeConfiguration信息列表请求参数
// swagger:model UpgradeConfigurationListReq
type UpgradeConfigurationListReq struct {
	PageInfo
	// 公司ID
	CompanyId *int `json:"companyId,optional"`
	// 配置唯一标识
	Key *string `json:"key,optional"`
	// 配置名称
	Name *string `json:"name,optional"`
	// 描述信息
	Description *string `json:"description,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade configuration information response | UpgradeConfiguration信息返回体
// swagger:model UpgradeConfigurationInfoResp
type UpgradeConfigurationInfoResp struct {
	BaseDataInfo
	// upgrade configuration information | UpgradeConfiguration信息数据
	Data UpgradeConfigurationInfo `json:"data"`
}

// The data of upgrade configuration upgrade strategy information | UpgradeConfigurationUpgradeStrategy信息
// swagger:model UpgradeConfigurationUpgradeStrategyInfo
type UpgradeConfigurationUpgradeStrategyInfo struct {
	Id *int `json:"id,optional"`
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional,default="`
	// ConfigurationID
	ConfigurationId *int `json:"configurationId,optional"`
	// configuration_version_id; 外键configuration_version.id
	ConfigurationVersionId *int `json:"configurationVersionId,optional"`
	// 升级任务开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData         *string `json:"upgradeDevData,optional"`
	UpgradeDevTypeZeroData *string `json:"upgradeDevTypeZeroData,optional"`
	UpgradeDevTypeOneData  []int   `json:"upgradeDevTypeOneData,optional"`
	UpgradeDevTypeTwoData  []int   `json:"upgradeDevTypeTwoData,optional"`
	// 指定升级的应用版本：0：全部版本；1，指定版本
	UpgradeVersionType *int32 `json:"upgradeVersionType,optional"`
	// 升级应用版本数据：0.当为全部版本时，此字段为空；1.当指定版本时，此字段存储版本id；
	UpgradeVersionData         *string `json:"upgradeVersionData,optional"`
	UpgradeVersionTypeZeroData *string `json:"upgradeVersionTypeZeroData,optional"`
	UpgradeVersionTypeOneData  []int   `json:"upgradeVersionTypeOneData,optional"`
	// 是否开启灰度
	IsGray *int32 `json:"isGray,optional"`
	// 灰度策略数据
	GrayDataInfo []*ConfigurationGrayDataInfo `json:"grayDataList,optional"`
	// 是否开启频控
	IsFlowLimit *int32 `json:"isFlowLimit,optional"`
	// 频控策略数据
	FlowLimitDataInfo []*ConfigurationFlowLimitDataInfo `json:"flowLimitDataList,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// swagger:model RespUpgradeConfigurationUpgradeStrategyInfo
type RespUpgradeConfigurationUpgradeStrategyInfo struct {
	Id *int `json:"id,optional"`
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional,default="`
	// configuration应用ID
	ConfigurationId *int `json:"configurationId,optional"`
	// Configuration应用
	ConfigurationName *string `json:"configurationName,optional"`
	// configuration_version_id; 外键configuration_version.id
	ConfigurationVersionId *int `json:"configurationVersionId,optional"`
	// configuration版本名
	ConfigurationVersionName *string `json:"configurationVersionName,optional"`
	// Configuration版本号
	ConfigurationVersionCode *int `json:"configurationVersionCode,optional"`
	// 升级任务开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData         *string `json:"upgradeDevData,optional"`
	UpgradeDevTypeZeroData *string `json:"upgradeDevTypeZeroData,optional"`
	UpgradeDevTypeOneData  []int   `json:"upgradeDevTypeOneData,optional"`
	UpgradeDevTypeTwoData  []int   `json:"upgradeDevTypeTwoData,optional"`
	// 指定升级的应用版本：0：全部版本；1，指定版本
	UpgradeVersionType *int32 `json:"upgradeVersionType,optional"`
	// 升级应用版本数据：0.当为全部版本时，此字段为空；1.当指定版本时，此字段存储版本id；
	UpgradeVersionData         *string `json:"upgradeVersionData,optional"`
	UpgradeVersionTypeZeroData *string `json:"upgradeVersionTypeZeroData,optional"`
	UpgradeVersionTypeOneData  []int   `json:"upgradeVersionTypeOneData,optional"`
	// 是否开启灰度
	IsGray *int32 `json:"isGray,optional"`
	// 灰度策略数据
	GrayDataInfo []*ConfigurationGrayDataInfo `json:"grayDataList,optional"`
	// 是否开启频控
	IsFlowLimit *int32 `json:"isFlowLimit,optional"`
	// 频控策略数据
	FlowLimitDataInfo []*ConfigurationFlowLimitDataInfo `json:"flowLimitDataList,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// 灰度策略数据
// swagger:model ConfigurationGrayDataInfo
type ConfigurationGrayDataInfo struct {
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 数量
	Limit *int `json:"limit,optional"`
}

// 频控策略数据
// swagger:model ConfigurationFlowLimitDataInfo
type ConfigurationFlowLimitDataInfo struct {
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 开始时间
	Begintime *string `json:"beginTime,optional"`
	// 结束时间
	Endtime *string `json:"endTime,optional"`
	// 流控维度
	Dimension *int32 `json:"dimension,optional"`
	// 数量
	Limit *int `json:"limit,optional"`
}

// The response data of upgrade configuration upgrade strategy list | UpgradeConfigurationUpgradeStrategy信息列表数据
// swagger:model UpgradeConfigurationUpgradeStrategyListResp
type UpgradeConfigurationUpgradeStrategyListResp struct {
	BaseDataInfo
	// The upgrade configuration upgrade strategy list data | UpgradeConfigurationUpgradeStrategy信息列表数据
	Data UpgradeConfigurationUpgradeStrategyListInfo `json:"data"`
}

// The upgrade configuration upgrade strategy list data | UpgradeConfigurationUpgradeStrategy信息列表数据
// swagger:model UpgradeConfigurationUpgradeStrategyListInfo
type UpgradeConfigurationUpgradeStrategyListInfo struct {
	BaseListInfo
	// The upgrade configuration upgrade strategy list data | UpgradeConfigurationUpgradeStrategy信息列表数据
	Data []RespUpgradeConfigurationUpgradeStrategyInfo `json:"data"`
}

// Get upgrade configuration upgrade strategy list request params | UpgradeConfigurationUpgradeStrategy信息列表请求参数
// swagger:model UpgradeConfigurationUpgradeStrategyListReq
type UpgradeConfigurationUpgradeStrategyListReq struct {
	PageInfo
	// 公司ID
	CompanyId *int `json:"companyId,optional"`
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional"`
	// 配置ID
	ConfigurationId *int `json:"configurationId,optional"`
	// configuration_version_id; 外键configuration_version.id
	ConfigurationVersionId *int `json:"configurationVersionId,optional"`
	// 升级任务开始时间
	BeginDatetime *int64 `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *int64 `json:"endDatetime,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData *string `json:"upgradeDevData,optional"`
	// 指定升级的应用版本：0：全部版本；1：指定版本
	UpgradeVersionType *int32 `json:"upgradeVersionType,optional"`
	// 升级设备数据：0.当为全部版本时，此字段为空；；1.当指定应用版本时，此字段存储应用版本id;
	UpgradeVersionData *string `json:"upgradeVersionData,optional"`
	// 是否开启灰度 0：不开启；1：开启
	IsGray *int32 `json:"isGray,optional"`
	// 灰度策略id数据
	GrayData *string `json:"grayData,optional"`
	// 是否开启频控 0：不开启；1：开启
	IsFlowLimit *int32 `json:"isFlowLimit,optional"`
	// 频控策略id数据
	FlowLimitData *string `json:"flowLimitData,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade configuration upgrade strategy information response | UpgradeConfigurationUpgradeStrategy信息返回体
// swagger:model UpgradeConfigurationUpgradeStrategyInfoResp
type UpgradeConfigurationUpgradeStrategyInfoResp struct {
	BaseDataInfo
	// upgrade configuration upgrade strategy information | UpgradeConfigurationUpgradeStrategy信息数据
	Data RespUpgradeConfigurationUpgradeStrategyInfo `json:"data"`
}

// The data of upgrade configuration version information | UpgradeConfigurationVersion信息
// swagger:model UpgradeConfigurationVersionInfo
type UpgradeConfigurationVersionInfo struct {
	Id *int `json:"id,optional"`
	// 配置ID
	ConfigurationId *int `json:"configurationId,optional"`
	// 内容
	Content *string `json:"content,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 描述信息
	Description *string `json:"description,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// swagger:model RespUpgradeConfigurationVersionInfo
type RespUpgradeConfigurationVersionInfo struct {
	Id *int `json:"id,optional"`
	// configuration应用ID
	ConfigurationId *int `json:"configurationId,optional"`
	// configuration应用
	ConfigurationName *string `json:"configurationName,optional"`
	// 内容
	Content *string `json:"content,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 描述信息
	Description *string `json:"description,optional,default="`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade configuration version list | UpgradeConfigurationVersion信息列表数据
// swagger:model UpgradeConfigurationVersionListResp
type UpgradeConfigurationVersionListResp struct {
	BaseDataInfo
	// The upgrade configuration version list data | UpgradeConfigurationVersion信息列表数据
	Data UpgradeConfigurationVersionListInfo `json:"data"`
}

// The upgrade configuration version list data | UpgradeConfigurationVersion信息列表数据
// swagger:model UpgradeConfigurationVersionListInfo
type UpgradeConfigurationVersionListInfo struct {
	BaseListInfo
	// The upgrade configuration version list data | UpgradeConfigurationVersion信息列表数据
	Data []RespUpgradeConfigurationVersionInfo `json:"data"`
}

// Get upgrade configuration version list request params | UpgradeConfigurationVersion信息列表请求参数
// swagger:model UpgradeConfigurationVersionListReq
type UpgradeConfigurationVersionListReq struct {
	PageInfo
	// 配置ID
	ConfigurationId *int `json:"configurationId,optional"`
	// 内容
	Content *string `json:"content,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 描述信息
	Description *string `json:"description,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade configuration version information response | UpgradeConfigurationVersion信息返回体
// swagger:model UpgradeConfigurationVersionInfoResp
type UpgradeConfigurationVersionInfoResp struct {
	BaseDataInfo
	// upgrade configuration version information | UpgradeConfigurationVersion信息数据
	Data UpgradeConfigurationVersionInfo `json:"data"`
}

// The data of upgrade apk information | UpgradeApk信息
// swagger:model UpgradeApkInfo
type UpgradeApkInfo struct {
	Id *int `json:"id,optional"`
	// 安卓应用唯一标识
	Key *string `json:"key,optional"`
	// 安卓应用名称
	Name *string `json:"name,optional"`
	// 安卓应用包名
	PackageName *string `json:"packageName,optional"`
	// 描述信息
	Description *string `json:"description,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade apk list | UpgradeApk信息列表数据
// swagger:model UpgradeApkListResp
type UpgradeApkListResp struct {
	BaseDataInfo
	// The upgrade apk list data | UpgradeApk信息列表数据
	Data UpgradeApkListInfo `json:"data"`
}

// The upgrade apk list data | UpgradeApk信息列表数据
// swagger:model UpgradeApkListInfo
type UpgradeApkListInfo struct {
	BaseListInfo
	// The upgrade apk list data | UpgradeApk信息列表数据
	Data []UpgradeApkInfo `json:"data"`
}

// Get upgrade apk list request params | UpgradeApk信息列表请求参数
// swagger:model UpgradeApkListReq
type UpgradeApkListReq struct {
	PageInfo
	// 安卓应用唯一标识
	Key *string `json:"key,optional"`
	// 安卓应用名称
	Name *string `json:"name,optional"`
	// 安卓应用包名
	PackageName *string `json:"packageName,optional"`
	// 描述信息
	Description *string `json:"description,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade apk information response | UpgradeApk信息返回体
// swagger:model UpgradeApkInfoResp
type UpgradeApkInfoResp struct {
	BaseDataInfo
	// upgrade apk information | UpgradeApk信息数据
	Data UpgradeApkInfo `json:"data"`
}

// The data of upgrade apk upgrade strategy information | UpgradeApkUpgradeStrategy信息
// swagger:model UpgradeApkUpgradeStrategyInfo
type UpgradeApkUpgradeStrategyInfo struct {
	Id *int `json:"id,optional"`
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional"`
	// apk应用ID
	ApkId *int `json:"apkId,optional"`
	// apk_version_id; 外键apk_version.id
	ApkVersionId *int `json:"apkVersionId,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData         *string `json:"upgradeDevData,optional"`
	UpgradeDevTypeZeroData *string `json:"upgradeDevTypeZeroData,optional"`
	UpgradeDevTypeOneData  []int   `json:"upgradeDevTypeOneData,optional"`
	UpgradeDevTypeTwoData  []int   `json:"upgradeDevTypeTwoData,optional"`
	// 指定升级的应用版本：0：全部版本；1，指定版本
	UpgradeVersionType *int32 `json:"upgradeVersionType,optional"`
	// 升级应用版本数据：0.当为全部版本时，此字段为空；1.当指定版本时，此字段存储版本id；
	UpgradeVersionData         *string `json:"upgradeVersionData,optional"`
	UpgradeVersionTypeZeroData *string `json:"upgradeVersionTypeZeroData,optional"`
	UpgradeVersionTypeOneData  []int   `json:"upgradeVersionTypeOneData,optional"`
	// 升级任务开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 是否开启灰度
	IsGray *int32 `json:"isGray,optional"`
	// 灰度策略数据
	GrayDataInfo []*ApkGrayDataInfo `json:"grayDataList,optional"`
	// 是否开启频控
	IsFlowLimit *int32 `json:"isFlowLimit,optional"`
	// 频控策略数据
	FlowLimitDataInfo []*ApkFlowLimitDataInfo `json:"flowLimitDataList,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// swagger:model RespUpgradeApkUpgradeStrategyInfo
type RespUpgradeApkUpgradeStrategyInfo struct {
	Id *int `json:"id,optional"`
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional,default="`
	// apk应用ID
	ApkId *int `json:"apkId,optional"`
	// apk应用名称
	ApkName *string `json:"apkName,optional"`
	// apk_version_id; 外键apk_version.id
	ApkVersionId   *int    `json:"apkVersionId,optional"`
	ApkVersionName *string `json:"apkVersionName,optional"`
	ApkVersionCode *int    `json:"apkVersionCode,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData         *string `json:"upgradeDevData,optional"`
	UpgradeDevTypeZeroData *string `json:"upgradeDevTypeZeroData,optional"`
	UpgradeDevTypeOneData  []int   `json:"upgradeDevTypeOneData,optional"`
	UpgradeDevTypeTwoData  []int   `json:"upgradeDevTypeTwoData,optional"`
	// 指定升级的应用版本：0：全部版本；1，指定版本
	UpgradeVersionType *int32 `json:"upgradeVersionType,optional"`
	// 升级应用版本数据：0.当为全部版本时，此字段为空；1.当指定版本时，此字段存储版本id；
	UpgradeVersionData         *string `json:"upgradeVersionData,optional"`
	UpgradeVersionTypeZeroData *string `json:"upgradeVersionTypeZeroData,optional"`
	UpgradeVersionTypeOneData  []int   `json:"upgradeVersionTypeOneData,optional"`
	// 升级任务开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 是否开启灰度
	IsGray *int32 `json:"isGray,optional"`
	// 灰度策略数据
	GrayDataInfo []*ApkGrayDataInfo `json:"grayDataList,optional"`
	// 是否开启频控
	IsFlowLimit *int32 `json:"isFlowLimit,optional"`
	// 频控策略数据
	FlowLimitDataInfo []*ApkFlowLimitDataInfo `json:"flowLimitDataList,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// 灰度策略数据
// swagger:model ApkGrayDataInfo
type ApkGrayDataInfo struct {
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 数量
	Limit *int `json:"limit,optional"`
}

// 频控策略数据
// swagger:model ApkFlowLimitDataInfo
type ApkFlowLimitDataInfo struct {
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 开始时间
	Begintime *string `json:"beginTime,optional"`
	// 结束时间
	Endtime *string `json:"endTime,optional"`
	// 流控维度
	Dimension *int32 `json:"dimension,optional"`
	// 数量
	Limit *int `json:"limit,optional"`
}

// The response data of upgrade apk upgrade strategy list | UpgradeApkUpgradeStrategy信息列表数据
// swagger:model UpgradeApkUpgradeStrategyListResp
type UpgradeApkUpgradeStrategyListResp struct {
	BaseDataInfo
	// The upgrade apk upgrade strategy list data | UpgradeApkUpgradeStrategy信息列表数据
	Data UpgradeApkUpgradeStrategyListInfo `json:"data"`
}

// The upgrade apk upgrade strategy list data | UpgradeApkUpgradeStrategy信息列表数据
// swagger:model UpgradeApkUpgradeStrategyListInfo
type UpgradeApkUpgradeStrategyListInfo struct {
	BaseListInfo
	// The upgrade apk upgrade strategy list data | UpgradeApkUpgradeStrategy信息列表数据
	Data []RespUpgradeApkUpgradeStrategyInfo `json:"data"`
}

// Get upgrade apk upgrade strategy list request params | UpgradeApkUpgradeStrategy信息列表请求参数
// swagger:model UpgradeApkUpgradeStrategyListReq
type UpgradeApkUpgradeStrategyListReq struct {
	PageInfo
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional"`
	// 安卓应用ID
	ApkId *int `json:"apkId,optional"`
	// apk_version_id; 外键apk_version.id
	ApkVersionId *int `json:"apkVersionId,optional"`
	// 升级任务开始时间
	BeginDatetime *int64 `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *int64 `json:"endDatetime,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData *string `json:"upgradeDevData,optional"`
	// 指定升级的应用版本：0：全部版本；1：指定版本
	UpgradeVersionType *int32 `json:"upgradeVersionType,optional"`
	// 升级设备数据：0.当为全部版本时，此字段为空；；1.当指定应用版本时，此字段存储应用版本id;
	UpgradeVersionData *string `json:"upgradeVersionData,optional"`
	// 是否开启灰度 0：不开启；1：开启
	IsGray *int32 `json:"isGray,optional"`
	// 灰度策略id数据
	GrayData *string `json:"grayData,optional"`
	// 是否开启频控 0：不开启；1：开启
	IsFlowLimit *int32 `json:"isFlowLimit,optional"`
	// 频控策略id数据
	FlowLimitData *string `json:"flowLimitData,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade apk upgrade strategy information response | UpgradeApkUpgradeStrategy信息返回体
// swagger:model UpgradeApkUpgradeStrategyInfoResp
type UpgradeApkUpgradeStrategyInfoResp struct {
	BaseDataInfo
	// upgrade apk upgrade strategy information | UpgradeApkUpgradeStrategy信息数据
	Data RespUpgradeApkUpgradeStrategyInfo `json:"data"`
}

// The data of upgrade apk version information | UpgradeApkVersion信息
// swagger:model UpgradeApkVersionInfo
type UpgradeApkVersionInfo struct {
	Id *int `json:"id,optional"`
	// 安卓应用ID
	ApkId *int `json:"apkId,optional"`
	// 云文件id
	CloudFileId *string `json:"cloudFileId,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 版本文件大小
	VersionFileSize *string `json:"versionFileSize,optional"`
	// 描述信息
	Description *string `json:"description,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// swagger:model RespUpgradeApkVersionInfo
type RespUpgradeApkVersionInfo struct {
	Id *int `json:"id,optional"`
	// 安卓应用ID
	ApkId *int `json:"apkId,optional"`
	// 文件应用名称
	ApkName *string `json:"apkName,optional"`
	// 云文件id
	CloudFileId *string `json:"cloudFileId,optional"`
	// 云文件名称
	CloudFileName *string `json:"cloudFileName,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 版本文件大小
	VersionFileSize *string `json:"versionFileSize,optional"`
	// 描述信息
	Description *string `json:"description,optional,default="`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade apk version list | UpgradeApkVersion信息列表数据
// swagger:model UpgradeApkVersionListResp
type UpgradeApkVersionListResp struct {
	BaseDataInfo
	// The upgrade apk version list data | UpgradeApkVersion信息列表数据
	Data UpgradeApkVersionListInfo `json:"data"`
}

// The upgrade apk version list data | UpgradeApkVersion信息列表数据
// swagger:model UpgradeApkVersionListInfo
type UpgradeApkVersionListInfo struct {
	BaseListInfo
	// The upgrade apk version list data | UpgradeApkVersion信息列表数据
	Data []RespUpgradeApkVersionInfo `json:"data"`
}

// Get upgrade apk version list request params | UpgradeApkVersion信息列表请求参数
// swagger:model UpgradeApkVersionListReq
type UpgradeApkVersionListReq struct {
	PageInfo
	// 安卓应用ID
	ApkId *int `json:"apkId,optional"`
	// 云文件id
	CloudFileId *string `json:"cloudFileId,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 描述信息
	Description *string `json:"description,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade apk version information response | UpgradeApkVersion信息返回体
// swagger:model UpgradeApkVersionInfoResp
type UpgradeApkVersionInfoResp struct {
	BaseDataInfo
	// upgrade apk version information | UpgradeApkVersion信息数据
	Data RespUpgradeApkVersionInfo `json:"data"`
}

// The data of upgrade electron information | UpgradeElectron信息
// swagger:model UpgradeElectronInfo
type UpgradeElectronInfo struct {
	Id *int `json:"id,optional"`
	// electron应用唯一标识
	Key *string `json:"key,optional"`
	// electron应用名称
	Name *string `json:"name,optional"`
	// 描述信息
	Description *string `json:"description,optional,default="`
	// 开源项目 github 地址
	GithubUrl *string `json:"githubUrl,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade electron list | UpgradeElectron信息列表数据
// swagger:model UpgradeElectronListResp
type UpgradeElectronListResp struct {
	BaseDataInfo
	// The upgrade electron list data | UpgradeElectron信息列表数据
	Data UpgradeElectronListInfo `json:"data"`
}

// The upgrade electron list data | UpgradeElectron信息列表数据
// swagger:model UpgradeElectronListInfo
type UpgradeElectronListInfo struct {
	BaseListInfo
	// The upgrade electron list data | UpgradeElectron信息列表数据
	Data []UpgradeElectronInfo `json:"data"`
}

// Get upgrade electron list request params | UpgradeElectron信息列表请求参数
// swagger:model UpgradeElectronListReq
type UpgradeElectronListReq struct {
	PageInfo
	// 公司ID
	CompanyId *int `json:"companyId,optional"`
	// electron应用唯一标识
	Key *string `json:"key,optional"`
	// electron应用名称
	Name *string `json:"name,optional"`
	// 描述信息
	Description *string `json:"description,optional"`
	// 开源项目 github 地址
	GithubUrl *string `json:"githubUrl,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade electron information response | UpgradeElectron信息返回体
// swagger:model UpgradeElectronInfoResp
type UpgradeElectronInfoResp struct {
	BaseDataInfo
	// upgrade electron information | UpgradeElectron信息数据
	Data UpgradeElectronInfo `json:"data"`
}

// The data of upgrade electron upgrade strategy information | UpgradeElectronUpgradeStrategy信息
// swagger:model UpgradeElectronUpgradeStrategyInfo
type UpgradeElectronUpgradeStrategyInfo struct {
	Id *int `json:"id,optional"`
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional"`
	// electron应用ID
	ElectronId *int `json:"electronId,optional"`
	// electron_version_id; 外键electron_version.id
	ElectronVersionId *int `json:"electronVersionId,optional"`
	// 升级任务开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData         *string `json:"upgradeDevData,optional"`
	UpgradeDevTypeZeroData *string `json:"upgradeDevTypeZeroData,optional"`
	UpgradeDevTypeOneData  []int   `json:"upgradeDevTypeOneData,optional"`
	UpgradeDevTypeTwoData  []int   `json:"upgradeDevTypeTwoData,optional"`
	// 指定升级的应用版本：0：全部版本；1，指定版本
	UpgradeVersionType *int32 `json:"upgradeVersionType,optional"`
	// 升级应用版本数据：0.当为全部版本时，此字段为空；1.当指定版本时，此字段存储版本id；
	UpgradeVersionData         *string `json:"upgradeVersionData,optional"`
	UpgradeVersionTypeZeroData *string `json:"upgradeVersionTypeZeroData,optional"`
	UpgradeVersionTypeOneData  []int   `json:"upgradeVersionTypeOneData,optional"`
	// 是否开启灰度
	IsGray *int32 `json:"isGray,optional"`
	// 灰度策略数据
	GrayDataInfo []*ElectronGrayDataInfo `json:"grayDataList,optional"`
	// 是否开启频控
	IsFlowLimit *int32 `json:"isFlowLimit,optional"`
	// 频控策略数据
	FlowLimitDataInfo []*ElectronFlowLimitDataInfo `json:"flowLimitDataList,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// swagger:model RespUpgradeElectronUpgradeStrategyInfo
type RespUpgradeElectronUpgradeStrategyInfo struct {
	Id *int `json:"id,optional"`
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional,default="`
	// electron应用ID
	ElectronId *int `json:"electronId,optional"`
	// Electron应用名称
	ElectronName *string `json:"electronName,optional"`
	// electron_version_id; 外键electron_version.id
	ElectronVersionId *int `json:"electronVersionId,optional"`
	// Electron应用版本名称
	ElectronVersionName *string `json:"electronVersionName,optional"`
	ElectronVersionCode *int    `json:"electronVersionCode,optional"`
	ElectronPlatform    *string `json:"electronPlatform,optional"`
	ElectronArch        *string `json:"electronArch,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData         *string `json:"upgradeDevData,optional"`
	UpgradeDevTypeZeroData *string `json:"upgradeDevTypeZeroData,optional"`
	UpgradeDevTypeOneData  []int   `json:"upgradeDevTypeOneData,optional"`
	UpgradeDevTypeTwoData  []int   `json:"upgradeDevTypeTwoData,optional"`
	// 指定升级的应用版本：0：全部版本；1，指定版本
	UpgradeVersionType *int32 `json:"upgradeVersionType,optional"`
	// 升级应用版本数据：0.当为全部版本时，此字段为空；1.当指定版本时，此字段存储版本id；
	UpgradeVersionData         *string `json:"upgradeVersionData,optional"`
	UpgradeVersionTypeZeroData *string `json:"upgradeVersionTypeZeroData,optional"`
	UpgradeVersionTypeOneData  []int   `json:"upgradeVersionTypeOneData,optional"`
	// 升级任务开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 是否开启灰度
	IsGray *int32 `json:"isGray,optional"`
	// 灰度策略数据
	GrayDataInfo []*ElectronGrayDataInfo `json:"grayDataList,optional"`
	// 是否开启频控
	IsFlowLimit *int32 `json:"isFlowLimit,optional"`
	// 频控策略数据
	FlowLimitDataInfo []*ElectronFlowLimitDataInfo `json:"flowLimitDataList,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// 灰度策略数据
// swagger:model ElectronGrayDataInfo
type ElectronGrayDataInfo struct {
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 开始时间
	BeginDatetime *string `json:"beginDatetime,optional"`
	// 结束时间
	EndDatetime *string `json:"endDatetime,optional"`
	// 数量
	Limit *int `json:"limit,optional"`
}

// 频控策略数据
// swagger:model ElectronFlowLimitDataInfo
type ElectronFlowLimitDataInfo struct {
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 开始时间
	Begintime *string `json:"beginTime,optional"`
	// 结束时间
	Endtime *string `json:"endTime,optional"`
	// 流控维度
	Dimension *int32 `json:"dimension,optional"`
	// 数量
	Limit *int `json:"limit,optional"`
}

// The response data of upgrade electron upgrade strategy list | UpgradeElectronUpgradeStrategy信息列表数据
// swagger:model UpgradeElectronUpgradeStrategyListResp
type UpgradeElectronUpgradeStrategyListResp struct {
	BaseDataInfo
	// The upgrade electron upgrade strategy list data | UpgradeElectronUpgradeStrategy信息列表数据
	Data UpgradeElectronUpgradeStrategyListInfo `json:"data"`
}

// The upgrade electron upgrade strategy list data | UpgradeElectronUpgradeStrategy信息列表数据
// swagger:model UpgradeElectronUpgradeStrategyListInfo
type UpgradeElectronUpgradeStrategyListInfo struct {
	BaseListInfo
	// The upgrade electron upgrade strategy list data | UpgradeElectronUpgradeStrategy信息列表数据
	Data []RespUpgradeElectronUpgradeStrategyInfo `json:"data"`
}

// Get upgrade electron upgrade strategy list request params | UpgradeElectronUpgradeStrategy信息列表请求参数
// swagger:model UpgradeElectronUpgradeStrategyListReq
type UpgradeElectronUpgradeStrategyListReq struct {
	PageInfo
	// 公司ID
	CompanyId *int `json:"companyId,optional"`
	// 是否生效；可通过此控制策略是否生效0：失效；1：生效
	Enable *int32 `json:"enable,optional"`
	// 任务名称
	Name *string `json:"name,optional"`
	// 任务描述信息
	Description *string `json:"description,optional"`
	// electron应用ID
	ElectronId *int `json:"electronId,optional"`
	// electron_version_id; 外键electron_version.id
	ElectronVersionId *int `json:"electronVersionId,optional"`
	// 升级任务开始时间
	BeginDatetime *int64 `json:"beginDatetime,optional"`
	// 升级任务结束时间
	EndDatetime *int64 `json:"endDatetime,optional"`
	// 升级方式：0：未知方式；1：提示升级；2：静默升级；3: 强制升级
	UpgradeType *int32 `json:"upgradeType,optional"`
	// 提示升级描述内容
	PromptUpgradeContent *string `json:"promptUpgradeContent,optional"`
	// 指定升级的设备范围：0：全部设备；1：指定设备分组；2：指定机型
	UpgradeDevType *int32 `json:"upgradeDevType,optional"`
	// 升级设备数据：0.当为全部设备时，此字段为空；；1.当指定设备分组时，此字段存储设备分组id；2.当指定设备机型时，此字段存储选中的设备机型id;
	UpgradeDevData *string `json:"upgradeDevData,optional"`
	// 指定升级的应用版本：0：全部版本；1：指定版本
	UpgradeVersionType *int32 `json:"upgradeVersionType,optional"`
	// 升级设备数据：0.当为全部版本时，此字段为空；；1.当指定应用版本时，此字段存储应用版本id;
	UpgradeVersionData *string `json:"upgradeVersionData,optional"`
	// 是否开启灰度 0：不开启；1：开启
	IsGray *int32 `json:"isGray,optional"`
	// 灰度策略id数据
	GrayData *string `json:"grayData,optional"`
	// 是否开启频控 0：不开启；1：开启
	IsFlowLimit *int32 `json:"isFlowLimit,optional"`
	// 频控策略id数据
	FlowLimitData *string `json:"flowLimitData,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade electron upgrade strategy information response | UpgradeElectronUpgradeStrategy信息返回体
// swagger:model UpgradeElectronUpgradeStrategyInfoResp
type UpgradeElectronUpgradeStrategyInfoResp struct {
	BaseDataInfo
	// upgrade electron upgrade strategy information | UpgradeElectronUpgradeStrategy信息数据
	Data RespUpgradeElectronUpgradeStrategyInfo `json:"data"`
}

// The data of upgrade electron version information | UpgradeElectronVersion信息
// swagger:model UpgradeElectronVersionInfo
type UpgradeElectronVersionInfo struct {
	Id *int `json:"id,optional"`
	// 公司ID
	CompanyId *int `json:"companyId,optional"`
	// ElectronId
	ElectronId *int `json:"electronId,optional"`
	// 云文件id
	CloudFileId *string `json:"cloudFileId,optional"`
	// 生成的sha512
	Sha512 *string `json:"sha512,optional"`
	// 云文件id 安装文件
	InstallCloudFileId *string `json:"installCloudFileId,optional"`
	// 生成的sha512
	InstallSha512 *string `json:"installSha512,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 安装包文件大小
	InstallVersionFileSize *string `json:"installVersionFileSize,optional"`
	// 升级包文件大小
	UpgradeVersionFileSize *string `json:"upgradeVersionFileSize,optional"`
	// 操作平台:linux、mac、windows
	Platform *string `json:"platform,optional"`
	// 分发类型: windows:nsis,portable, linux: AppImage,deb
	Target *string `json:"target,optional"`
	// 机器架构:x64、ia32 arm64
	Arch *string `json:"arch,optional"`
	// 描述信息
	Description *string `json:"description,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// swagger:model RespUpgradeElectronVersionInfo
type RespUpgradeElectronVersionInfo struct {
	Id *int `json:"id,optional"`
	// ElectronId
	ElectronId *int `json:"electronId,optional"`
	// Electron应用名称
	ElectronName *string `json:"electronName,optional"`
	// 云文件id
	CloudFileId *string `json:"cloudFileId,optional"`
	// 云文件名称
	CloudFileName *string `json:"cloudFileName,optional"`
	// 云文件id 安装文件
	InstallCloudFileId *string `json:"installCloudFileId,optional"`
	// 云文件名称
	InstallCloudFileName *string `json:"InstallCloudFileName,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 安装包文件大小
	InstallVersionFileSize *string `json:"installVersionFileSize,optional"`
	// 升级包文件大小
	UpgradeVersionFileSize *string `json:"upgradeVersionFileSize,optional"`
	// 操作平台:linux、darwin、windows
	Platform *string `json:"platform,optional"`
	// 机器架构:x64、arm64
	Arch *string `json:"arch,optional"`
	// 生成的sha512
	Sha512 *string `json:"sha512,optional"`
	// 生成的sha512
	InstallSha512 *string `json:"installSha512,optional"`
	// 描述信息
	Description *string `json:"description,optional,default="`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade electron version list | UpgradeElectronVersion信息列表数据
// swagger:model UpgradeElectronVersionListResp
type UpgradeElectronVersionListResp struct {
	BaseDataInfo
	// The upgrade electron version list data | UpgradeElectronVersion信息列表数据
	Data UpgradeElectronVersionListInfo `json:"data"`
}

// The upgrade electron version list data | UpgradeElectronVersion信息列表数据
// swagger:model UpgradeElectronVersionListInfo
type UpgradeElectronVersionListInfo struct {
	BaseListInfo
	// The upgrade electron version list data | UpgradeElectronVersion信息列表数据
	Data []RespUpgradeElectronVersionInfo `json:"data"`
}

// Get upgrade electron version list request params | UpgradeElectronVersion信息列表请求参数
// swagger:model UpgradeElectronVersionListReq
type UpgradeElectronVersionListReq struct {
	PageInfo
	// 公司ID
	CompanyId *int `json:"companyId,optional"`
	// tauri应用ID
	ElectronId *int `json:"electronId,optional"`
	// 版本名
	VersionName *string `json:"versionName,optional"`
	// 版本号
	VersionCode *int `json:"versionCode,optional"`
	// 操作平台:linux、mac、windows
	Platform *string `json:"platform,optional"`
	// 分发类型: windows:nsis,portable, linux: AppImage,deb
	Target *string `json:"target,optional"`
	// 机器架构:x64、ia32 arm64
	Arch *string `json:"arch,optional"`
	// 描述信息
	Description *string `json:"description,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade electron version information response | UpgradeElectronVersion信息返回体
// swagger:model UpgradeElectronVersionInfoResp
type UpgradeElectronVersionInfoResp struct {
	BaseDataInfo
	// upgrade electron version information | UpgradeElectronVersion信息数据
	Data RespUpgradeElectronVersionInfo `json:"data"`
}

// The data of upgrade company income information | UpgradeCompanyIncome信息
// swagger:model UpgradeCompanyIncomeInfo
type UpgradeCompanyIncomeInfo struct {
	Id *int `json:"id,optional"`
	// 公司ID
	CompanyId *int `json:"companyId,optional"`
	// 收入类型：0 - 广告收入；
	IncomeType *int8 `json:"incomeType,optional"`
	// 收入金额（单位分）
	IncomeAmount *int `json:"incomeAmount,optional"`
	// 收入产生时间
	IncomeTime *int64 `json:"incomeTime,optional"`
	// 备注
	Remark *string `json:"remark,optional"`
	// 收入状态：0 - 待结算；1 - 已结算；2 - 失效（如订单取消导致收入作废）
	Status *int32 `json:"status,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade company income list | UpgradeCompanyIncome信息列表数据
// swagger:model UpgradeCompanyIncomeListResp
type UpgradeCompanyIncomeListResp struct {
	BaseDataInfo
	// The upgrade company income list data | UpgradeCompanyIncome信息列表数据
	Data UpgradeCompanyIncomeListInfo `json:"data"`
}

// The upgrade company income list data | UpgradeCompanyIncome信息列表数据
// swagger:model UpgradeCompanyIncomeListInfo
type UpgradeCompanyIncomeListInfo struct {
	BaseListInfo
	// 待结算金额
	IncomeAmount *int `json:"incomeAmount,optional"`
	// 已结算金额
	SettleAmount *int `json:"settleAmount,optional"`
	// The upgrade company income list data | UpgradeCompanyIncome信息列表数据
	Data []UpgradeCompanyIncomeInfo `json:"data"`
}

// Get upgrade company income list request params | UpgradeCompanyIncome信息列表请求参数
// swagger:model UpgradeCompanyIncomeListReq
type UpgradeCompanyIncomeListReq struct {
	PageInfo
	// 公司ID
	CompanyId *int `json:"companyId,optional"`
	// 收入类型：0 - 广告收入；
	IncomeType *int8 `json:"incomeType,optional"`
	// 收入金额（单位分）
	IncomeAmount *int `json:"incomeAmount,optional"`
	// 收入产生时间
	IncomeTime *int64 `json:"incomeTime,optional"`
	// 备注
	Remark *string `json:"remark,optional"`
	// 收入状态：0 - 待结算；1 - 已结算；2 - 失效（如订单取消导致收入作废）
	Status *int32 `json:"status,optional"`
	// 是否删除 0：正常；1：已删除
	IsDel *int32 `json:"isDel,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The upgrade company income information response | UpgradeCompanyIncome信息返回体
// swagger:model UpgradeCompanyIncomeInfoResp
type UpgradeCompanyIncomeInfoResp struct {
	BaseDataInfo
	// upgrade company income information | UpgradeCompanyIncome信息数据
	Data UpgradeCompanyIncomeInfo `json:"data"`
}

// swagger:model UpgradeCompanyTrafficPacketCreateInfo
type UpgradeCompanyTrafficPacketCreateInfo struct {
	// 流量包唯一标识
	Key *string `json:"key"`
}

// The data of upgrade company traffic packet information | UpgradeCompanyTrafficPacket信息
// swagger:model UpgradeCompanyTrafficPacketInfo
type UpgradeCompanyTrafficPacketInfo struct {
	Id *uint64 `json:"id,optional"`
	// 公司ID
	CompanyId *int `json:"companyId,optional"`
	// 流量包ID
	PacketId *int `json:"packetId,optional"`
	// 流量包名称
	Name *string `json:"name,optional"`
	// 流量包唯一标识
	Key *string `json:"key,optional"`
	// 开始时间
	StartTime *int64 `json:"startTime,optional"`
	// 结束时间
	EndTime *int64 `json:"endTime,optional"`
	// 初始流量大小
	InitialSize *string `json:"initialSize,optional"`
	// 剩余流量大小
	RemainingSize *string `json:"remainingSize,optional"`
	// 状态: 1=有效, 0=已过期, 2=已用完
	Status *int32 `json:"status,optional"`
	// 兑换流量包时间
	ExchangeTime *int64 `json:"exchangeTime,optional"`
	// 创建时间
	CreateAt *int64 `json:"createAt,optional"`
	// 修改时间
	UpdateAt *int64 `json:"updateAt,optional"`
}

// The response data of upgrade company traffic packet list | UpgradeCompanyTrafficPacket信息列表数据
// swagger:model UpgradeCompanyTrafficPacketListResp
type UpgradeCompanyTrafficPacketListResp struct {
	BaseDataInfo
	// The upgrade company traffic packet list data | UpgradeCompanyTrafficPacket信息列表数据
	Data UpgradeCompanyTrafficPacketListInfo `json:"data"`
}

// The upgrade company traffic packet list data | UpgradeCompanyTrafficPacket信息列表数据
// swagger:model UpgradeCompanyTrafficPacketListInfo
type UpgradeCompanyTrafficPacketListInfo struct {
	BaseListInfo
	// The upgrade company traffic packet list data | UpgradeCompanyTrafficPacket信息列表数据
	Data []UpgradeCompanyTrafficPacketInfo `json:"data"`
}

// Get upgrade company traffic packet list request params | UpgradeCompanyTrafficPacket信息列表请求参数
// swagger:model UpgradeCompanyTrafficPacketListReq
type UpgradeCompanyTrafficPacketListReq struct {
	PageInfo
	// 状态: 1=有效, 0=已过期, 2=已用完
	Status *int32 `json:"status,optional"`
}

// The upgrade company traffic packet information response | UpgradeCompanyTrafficPacket信息返回体
// swagger:model UpgradeCompanyTrafficPacketInfoResp
type UpgradeCompanyTrafficPacketInfoResp struct {
	BaseDataInfo
	// upgrade company traffic packet information | UpgradeCompanyTrafficPacket信息数据
	Data UpgradeCompanyTrafficPacketInfo `json:"data"`
}
